@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Krypton';
  src: url('../public/JetBrainsMonoNerdFontMono-Regular.ttf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 224 71.4% 4.1%;

    --card: 0 0% 100%;
    --card-foreground: 224 71.4% 4.1%;

    --popover: 0 0% 100%;
    --popover-foreground: 224 71.4% 4.1%;

    --primary: 220.9 39.3% 11%;
    --primary-foreground: 210 20% 98%;

    --secondary: 220 14.3% 95.9%;
    --secondary-foreground: 220.9 39.3% 11%;

    --muted: 220 14.3% 95.9%;
    --muted-foreground: 220 8.9% 46.1%;

    --accent: 220 14.3% 95.9%;
    --accent-foreground: 220.9 39.3% 11%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 20% 98%;

    --border: 220 13% 91%;
    --input: 220 13% 91%;
    --ring: 224 71.4% 4.1%;

    --radius: 0.3rem;

    /*generate button */
    --context-bg: hsl(0deg 0% 99%);
    --bg-container: hsl(0deg 0% 96%);
    --bg-button: hsl(179deg 7% 97%);
    --color-button: hsl(359deg 1% 35%);

    --button-shadow-opacity: 0;
    --button-shadow-spread: 0;
    --button-bg-opacity: 0;
    --button-after-opacity: 0;
    --btn-border-color: transparent;
    --btn-border-size: 0;
    --btn-inner-shadow: 1;

    --container-border-color: rgb(0 0 0 / 8%);
    --container-box-shadow-color: rgb(0 0 0 / 12%);

    --timing: 0.3s;
    --transitions: --coord-y 0.075s linear, --coord-x 0.075s linear, --button-shadow-opacity var(--timing) ease,
      --button-shadow-spread var(--timing) ease, --button-bg-opacity var(--timing) ease,
      --button-after-opacity var(--timing) ease, opacity var(--timing) ease, box-shadow var(--timing) ease,
      background-image var(--timing) ease;
  }

  .dark {
    --background: 240 15% 10%;
    --foreground: 210 20% 98%;

    --card: 235 19% 13%;
    --card-foreground: 210 20% 98%;

    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 20% 98%;

    --primary: 229 73% 93%;
    --primary-foreground: 220.9 39.3% 11%;

    --secondary: 215 27.9% 16.9%;
    --secondary-foreground: 210 20% 98%;

    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.9 10.6% 64.9%;

    --accent: 215 27.9% 16.9%;
    --accent-foreground: 210 20% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 20% 98%;

    --border: 215 27.9% 16.9%;
    --input: 215 27.9% 16.9%;
    --ring: 216 12.2% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-krypton;
  }

  html,
  body,
  #root {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
  }
}

image {
  width: auto;
  height: auto;
}

/* General styling for the code block */
.hljs {
  @apply overflow-x-auto font-thin !important;
}

code {
  @apply whitespace-pre-wrap text-primary !important;
  /* This will wrap the text inside the code block */
}

/* Keyword styling (like def, if, else, return) */
.hljs-keyword {
  @apply text-[#a626a4] !important;
  /* Purple */
}

/* Function names */
.hljs-title.function_ {
  @apply text-[#e45649] !important;
  /* Reddish */
}

/* Parameters and variables */
.hljs-params {
  @apply text-[#50a14f] !important;
  /* Green */
}

/* Number styling */
.hljs-number {
  @apply text-[#986801] !important;
  /* Brown */
}

/* Comments */
.hljs-comment {
  @apply text-[#a0a1a7] italic !important;
  /* Light gray */
}

/* Built-in functions and strings */
.hljs-built_in,
.hljs-string {
  @apply text-[#0184bb] !important;
  /* Blue */
}

/* Substitutions in strings */
.hljs-subst {
  @apply text-[#c18401] !important;
  /* Orange */
}

.hljs-variable {
  @apply text-[#4078f2] !important;
  /* Blue */
}

.hljs-built_in {
  @apply text-[#4cf240] !important;
  /* Blue */
}

.language-blue {
  @apply bg-blue-500/50 rounded-none;
}

.katex-html {
  @apply hidden;
}

p {
  @apply text-xs md:text-sm text-primary;
}

math {
  @apply rounded-lg p-1 flex justify-start font-bold pointer-events-auto !important;
}

mo,
mfrac,
mtext,
mrow,
msup,
mi,
annotation {
  @apply text-[10px];
}

/* generate button*/
.generate-button:before,
.generate-button:after {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  outline: calc(var(--debug) * 1px) dotted hsl(calc(var(--debug) * 10 * 1deg) 60% 60%);
}

.generate-button {
  all: unset;
  --coord-y: 0;
  --coord-x: 0;

  --color-red: color(display-p3 0.95 0.06 0.02 / 0.3);
  --color-orange: color(display-p3 0.97 0.61 0.07 / 0.3);
  --color-olive: color(display-p3 0.83 0.87 0.04 / 0.3);
  --color-lime: color(display-p3 0.31 0.89 0.05 / 0.3);
  --color-teal: color(display-p3 0.12 0.88 0.88 / 0.3);
  --color-tealer: color(display-p3 0.15 0.8 0.93 / 0.3);
  --color-blue: color(display-p3 0.14 0.47 0.99 / 0.3);
  --color-purple: color(display-p3 0.38 0.14 0.99 / 0.3);
  --color-purpler: color(display-p3 0.73 0.04 0.94 / 0.3);
  --color-pink: color(display-p3 0.93 0.03 0.85 / 0.3);

  @supports not (color: color(display-p3 0.93 0.03 0.85)) {
    --color-red: hsl(3 80% 48% / 0.3);
    --color-orange: hsl(26 80% 52% / 0.3);
    --color-olive: hsl(65 80% 46% / 0.3);
    --color-lime: hsl(122 80% 48% / 0.3);
    --color-teal: hsl(181 70% 50% / 0.3);
    --color-tealer: hsl(193 70% 53% / 0.3);
    --color-blue: hsl(219 80% 56% / 0.3);
    --color-purple: hsl(269 80% 56% / 0.3);
    --color-purpler: hsl(292 80% 47% / 0.3);
    --color-pink: hsl(327 80% 47% / 0.3);
  }

  cursor: pointer;
  color: var(--color-button);
  border-radius: var(--radius);
  box-shadow: 0 8px calc(var(--button-shadow-spread) * 1px) -8px rgb(0 0 0 / calc(var(--button-shadow-opacity) * 1%));

  border: 1px solid var(--btn-border-color);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  background-image: conic-gradient(
    from 180deg,
    var(--color-red) 0%,
    var(--color-orange) 10%,
    var(--color-olive) 20%,
    var(--color-lime) 30%,
    var(--color-teal) 40%,
    var(--color-tealer) 50%,
    var(--color-blue) 60%,
    var(--color-purple) 70%,
    var(--color-purpler) 80%,
    var(--color-pink) 90%,
    var(--color-red) 100%
  );
  background-size: calc(100% + 2px);
  background-position: -1px -1px;
  transition:
    var(--transitions),
    transform 0.2s ease-in-out;

  & .inner {
    box-shadow:
      inset 0 calc(var(--btn-inner-shadow) * 2px) calc(var(--btn-inner-shadow) * 1px) rgb(255 255 255 / 90%),
      inset 0 calc(var(--btn-inner-shadow) * -2px) calc(var(--btn-inner-shadow) * 3px) rgb(0 0 0 / 3%);
  }

  &:before,
  &:after {
    pointer-events: none;
    border-radius: 100px;
    border: none;
    content: '';
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    transition:
      var(--transitions),
      transform 0.2s ease-in-out;

    background-image: conic-gradient(
      from 180deg,
      var(--color-red) 0%,
      var(--color-orange) 10%,
      var(--color-olive) 20%,
      var(--color-lime) 30%,
      var(--color-teal) 40%,
      var(--color-tealer) 50%,
      var(--color-blue) 60%,
      var(--color-purple) 70%,
      var(--color-purpler) 80%,
      var(--color-pink) 90%,
      var(--color-red) 100%
    );
  }

  &:before {
    z-index: -1;
    filter: saturate(1.2);
    display: none;
  }

  &:after {
    filter: saturate(2) blur(5px);
    transform: translate(calc(calc(var(--coord-x) / 1.5) * 1px), calc(calc(var(--coord-y) / 1.5) * -1px));
    width: 180%;
    height: 180%;
    opacity: calc(var(--button-after-opacity) / 3);
  }

  & span {
    pointer-events: none;
    font-size: 0.85em;
    /* padding: 4px; */
    border: 1px solid rgb(0 0 0 / 10%);
    border-radius: 14px;
    font-weight: 400;
  }

  &:hover {
    --button-shadow-opacity: 16;
    --button-shadow-spread: 16;
    --button-after-opacity: 0.7;
    opacity: 0.8;
    transform: scale(1.02);
    transition:
      var(--transitions),
      transform 0.2s ease-in-out;
  }

  &:active {
    transform: scale(0.98);
  }

  &:not(:hover) {
    --button-shadow-opacity: 16;
    --button-shadow-spread: 16;
    --button-after-opacity: 0.7;

    transition:
      var(--transitions),
      transform 0.2s ease-in-out;
  }
}

[data-theme='dark'] .generate-button {
  &:hover {
    --button-after-opacity: 0.75;

    &:active {
      --button-after-opacity: 0.9;
    }
  }

  & .inner {
    box-shadow:
      inset 0 calc(var(--btn-inner-shadow) * 2px) calc(var(--btn-inner-shadow) * 3px) rgb(255 255 255 / 1%),
      inset 0 calc(var(--btn-inner-shadow) * -2px) calc(var(--btn-inner-shadow) * 3px) rgb(0 0 0 / 25%);
  }

  & span {
    border: 1px solid rgb(255 255 255 / 10%);
  }
}

p,
a {
  @apply leading-[30px] text-base text-primary/80;
}

li {
  @apply text-base list-disc ml-4 text-primary/80;
}

h1 {
  @apply text-4xl font-bold;
}

h2 {
  @apply text-3xl font-bold;
}

h3 {
  @apply text-2xl font-bold;
}

h4 {
  @apply text-xl font-bold;
}

h5 {
  @apply text-lg font-bold;
}

h6 {
  @apply text-base font-bold;
}

/* General styling for the code block */
.hljs {
  @apply overflow-x-auto font-mono !important;
}

pre {
  @apply max-w-full overflow-x-auto bg-card p-2 rounded-lg !important;
}

code {
  @apply whitespace-pre-wrap bg-transparent !important;
  /* This will wrap the text inside the code block */
}

.katex-mathml {
  @apply text-xl;
}

annotation {
  @apply text-xl;
}

mi {
  @apply text-xl;
}

.katex {
  @apply text-xl;
}

.code-language {
  @apply font-bold text-[#555] bg-[#eee] px-2 py-1 rounded-lg text-sm mb-2 inline-block !important;
}

/* Keyword styling (like def, if, else, return) */
.hljs-keyword {
  @apply text-[#a626a4] font-bold !important;
  /* Purple */
}

/* Function names */
.hljs-title.function_ {
  @apply text-[#e45649] !important;
  /* Reddish */
}

/* Parameters and variables */
.hljs-params {
  @apply text-[#50a14f] !important;
  /* Green */
}

/* Number styling */
.hljs-number {
  @apply text-[#986801] !important;
  /* Brown */
}

/* Comments */
.hljs-comment {
  @apply text-[#a0a1a7] italic !important;
  /* Light gray */
}

/* Built-in functions and strings */
.hljs-built_in,
.hljs-string {
  @apply text-[#0184bb] !important;
  /* Blue */
}

/* Substitutions in strings */
.hljs-subst {
  @apply text-[#c18401] !important;
  /* Orange */
}

.hljs-variable {
  @apply text-[#4078f2] !important;
  /* Blue */
}

.hljs-built_in {
  @apply text-[#4cf240] !important;
  /* Blue */
}

.katex-html {
  @apply hidden;
}

mtext {
  @apply text-primary text-lg mx-auto overflow-x-auto;
}

mrow {
  @apply text-primary text-lg mx-auto overflow-x-auto overflow-y-hidden max-w-[300px] sm:max-w-[500px] xl:max-w-[600px];
}

input {
  @apply coarse:text-[18px];
}

.acss-qpkmq2 {
  @apply bg-transparent !important;
}

.acss-284vld {
  @apply overflow-visible !important;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.hide-scrollbar {
  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;
  /* Firefox */
}

mrow,
mtext {
  @apply overflow-x-auto overflow-y-hidden;
}

/*zig.style.css */
/* 关键字 */
.hljs-keyword {
  color: #c678dd;
  /* 深紫色，用于突出关键字 */
}

/* 标点符号 */
.hljs-punctuation {
  color: #8ff810;
  /* 淡蓝色，用于标点符号，避免与操作符颜色混淆 */
}

/* 可选参数和类型 */
.hljs-optional {
  color: #e5c07b;
  /* 橙色，用于突出显示可选参数和类型 */
}

/* 错误处理符号 */
.hljs-errorhandling {
  color: #e06c75;
  /* 淡红色，用于错误处理符号 */
}

/* 宏调用 */
.hljs-macro {
  color: #61afef;
  /* 亮蓝色，用于宏调用，保持加粗 */
  font-weight: bold;
}

/* 函数声明 */
.hljs-function {
  color: #61afef;
  /* 深蓝色，用于函数声明 */
}

/* 函数调用 */
.hljs-function-call {
  color: #e5c07b;
  /* 橙色，用于突出显示函数调用 */
}

/* 函数参数 */
.hljs-params {
  color: #98c379;
  /* 淡绿色，用于函数参数 */
}

/* 操作符 */
.hljs-operator {
  color: #d19a66;
  /* 棕色，用于操作符，与标点符号区分 */
}

/* 数字 */
.hljs-number {
  color: #dcdcaa;
  /* 淡黄色，用于数字 */
}

/* 字符串 */
.hljs-string {
  color: #98c379;
  /* 淡绿色，用于字符串 */
}

/* 注释 */
.hljs-comment {
  color: #5c6370;
  /* 淡灰色，用于注释，确保清晰可读 */
}

/* TODO注释 */
.hljs-comment-todo {
  color: #d19a66;
  /* 橙色，用于TODO注释 */
  font-weight: bold;
  /* 加粗，以增加可见性 */
}

.hljs-meta-event {
  color: #ff79c6;
  /* 粉色 */
  font-weight: bold;
  /* 加粗 */
}

.hljs-literal {
  color: #e06c75;
}

.hljs-multiline {
  color: #e67e22;
}
@keyframes fadeIn {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.fade-in {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  background: #16161d;
  animation: fadeIn 4s forwards ease-in-out;
}
